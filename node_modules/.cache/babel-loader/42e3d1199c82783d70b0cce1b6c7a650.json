{"ast":null,"code":"const UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\nlet initialState = {\n  dialogs: [{\n    id: 1,\n    name: \"Vadick\"\n  }, {\n    id: 2,\n    name: \"Alina\"\n  }, {\n    id: 3,\n    name: \"Chesterok\"\n  }, {\n    id: 4,\n    name: \"Puppy\"\n  }, {\n    id: 5,\n    name: \"Another Puppy\"\n  }, {\n    id: 6,\n    name: \"Another cat\"\n  }],\n  messages: [{\n    id: 1,\n    message: \"Hi\"\n  }, {\n    id: 2,\n    message: \"Mew Mew\"\n  }, {\n    id: 3,\n    message: \"Bark Bark\"\n  }, {\n    id: 4,\n    message: \"Bark Bark\"\n  }, {\n    id: 5,\n    message: \"Bark Bark\"\n  }, {\n    id: 6,\n    message: \"Bark Bark\"\n  }],\n  newMessageBody: \"\"\n};\n\nconst dialogsReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case UPDATE_NEW_MESSAGE_BODY:\n      {\n        let stateCopy = { ...state\n        };\n        stateCopy.newMessageBody = action.body;\n        return stateCopy;\n      }\n\n    case SEND_MESSAGE:\n      {\n        let stateCopy = { ...state\n        };\n        let body = state.newMessageBody;\n        state.newMessageBody = \"\";\n        state.messages.push({\n          id: 6,\n          message: body\n        });\n        return state;\n      }\n\n    default:\n      return state;\n  }\n};\n\nexport const sendMessageCreator = () => ({\n  type: SEND_MESSAGE\n});\nexport const updateNewMessageBodyCreator = body => ({\n  type: UPDATE_NEW_MESSAGE_BODY,\n  body: body\n});\nexport default dialogsReducer;","map":{"version":3,"sources":["/Users/vadimpolovinko/Desktop/React learning/01-first/react-kabzda-01/src/redux/dialogs-reducer.js"],"names":["UPDATE_NEW_MESSAGE_BODY","SEND_MESSAGE","initialState","dialogs","id","name","messages","message","newMessageBody","dialogsReducer","state","action","type","stateCopy","body","push","sendMessageCreator","updateNewMessageBodyCreator"],"mappings":"AAAA,MAAMA,uBAAuB,GAAG,yBAAhC;AACA,MAAMC,YAAY,GAAG,cAArB;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,OAAO,EAAE,CACL;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GADK,EAEL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAFK,EAGL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAHK,EAIL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GAJK,EAKL;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GALK,EAML;AAAED,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,IAAI,EAAE;AAAf,GANK,CADM;AASfC,EAAAA,QAAQ,EAAE,CACN;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GADM,EAEN;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GAFM,EAGN;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GAHM,EAIN;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GAJM,EAKN;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GALM,EAMN;AAAEH,IAAAA,EAAE,EAAE,CAAN;AAASG,IAAAA,OAAO,EAAE;AAAlB,GANM,CATK;AAiBfC,EAAAA,cAAc,EAAE;AAjBD,CAAnB;;AAoBA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBR,YAAyB;AAAA,MAAXS,MAAW;;AAErD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKZ,uBAAL;AAA8B;AAC1B,YAAIa,SAAS,GAAG,EAAC,GAAGH;AAAJ,SAAhB;AACAG,QAAAA,SAAS,CAACL,cAAV,GAA2BG,MAAM,CAACG,IAAlC;AACA,eAAOD,SAAP;AACH;;AACD,SAAKZ,YAAL;AAAmB;AACf,YAAIY,SAAS,GAAG,EAAC,GAAGH;AAAJ,SAAhB;AAEA,YAAII,IAAI,GAAGJ,KAAK,CAACF,cAAjB;AACAE,QAAAA,KAAK,CAACF,cAAN,GAAuB,EAAvB;AACAE,QAAAA,KAAK,CAACJ,QAAN,CAAeS,IAAf,CAAoB;AAACX,UAAAA,EAAE,EAAE,CAAL;AAAQG,UAAAA,OAAO,EAAEO;AAAjB,SAApB;AACA,eAAOJ,KAAP;AACH;;AACD;AAAS,aAAOA,KAAP;AAdb;AAgBH,CAlBD;;AAmBA,OAAO,MAAMM,kBAAkB,GAAG,OAAO;AAAEJ,EAAAA,IAAI,EAAEX;AAAR,CAAP,CAA3B;AACP,OAAO,MAAMgB,2BAA2B,GAAIH,IAAD,KAAW;AAClDF,EAAAA,IAAI,EAAEZ,uBAD4C;AAElDc,EAAAA,IAAI,EAAEA;AAF4C,CAAX,CAApC;AAKP,eAAeL,cAAf","sourcesContent":["const UPDATE_NEW_MESSAGE_BODY = \"UPDATE-NEW-MESSAGE-BODY\";\nconst SEND_MESSAGE = \"SEND-MESSAGE\";\n\nlet initialState = {\n    dialogs: [\n        { id: 1, name: \"Vadick\" },\n        { id: 2, name: \"Alina\" },\n        { id: 3, name: \"Chesterok\" },\n        { id: 4, name: \"Puppy\" },\n        { id: 5, name: \"Another Puppy\" },\n        { id: 6, name: \"Another cat\" },\n    ],\n    messages: [\n        { id: 1, message: \"Hi\" },\n        { id: 2, message: \"Mew Mew\" },\n        { id: 3, message: \"Bark Bark\" },\n        { id: 4, message: \"Bark Bark\" },\n        { id: 5, message: \"Bark Bark\" },\n        { id: 6, message: \"Bark Bark\" },\n    ],\n    newMessageBody: \"\",\n};\n\nconst dialogsReducer = (state = initialState, action) => {\n\n    switch (action.type) {\n        case UPDATE_NEW_MESSAGE_BODY: {\n            let stateCopy = {...state};\n            stateCopy.newMessageBody = action.body;\n            return stateCopy;\n        }\n        case SEND_MESSAGE: {\n            let stateCopy = {...state};\n            \n            let body = state.newMessageBody;\n            state.newMessageBody = \"\";\n            state.messages.push({id: 6, message: body});\n            return state;\n        }\n        default: return state;\n    }\n}\nexport const sendMessageCreator = () => ({ type: SEND_MESSAGE });\nexport const updateNewMessageBodyCreator = (body) => ({\n    type: UPDATE_NEW_MESSAGE_BODY,\n    body: body,\n});\n\nexport default dialogsReducer;"]},"metadata":{},"sourceType":"module"}