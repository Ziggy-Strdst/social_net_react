{"ast":null,"code":"var _jsxFileName = \"/Users/vadimpolovinko/Desktop/React learning/01-first/react-kabzda-01/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport * as axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { follow, setUsers, unfollow, setCurrentPage, setTotalUsersCount, toggleIsFetching } from \"../../redux/users-reducer.\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/Preloader\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrenPage(pageNumber);\n      this.props.toggleIsFetching(true);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.toggleIsFetching(false);\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(Preloader, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n}; // let mapDispathcToProps = (dispatch) => {\n//   return {\n//     follow: (userId) => {\n//       dispatch(followAC(userId));\n//     },\n//     unfollow: (userId) => {\n//       dispatch(unfollowAC(userId));\n//     },\n//     setUsers: (users) => {\n//       dispatch(setUsersAC(users));\n//     },\n//     setCurrentPage: (pageNumber) => {\n//       dispatch(setCurrentPageAC(pageNumber));\n//     },\n//     setTotalUsersCount: (totalCount) => {\n//       dispatch(setUsersTotalCountAC(totalCount));\n//     },\n//     toggleIsFetching: (isFetching) => {\n//       dispatch(toggleIsFetchingAC(isFetching));\n//     },\n//   };\n// };\n\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching\n})(UsersContainer);","map":{"version":3,"sources":["/Users/vadimpolovinko/Desktop/React learning/01-first/react-kabzda-01/src/components/Users/UsersContainer.jsx"],"names":["React","axios","connect","follow","setUsers","unfollow","setCurrentPage","setTotalUsersCount","toggleIsFetching","Users","Preloader","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrenPage","get","pageSize","then","response","data","items","componentDidMount","currentPage","totalCount","render","isFetching","totalUsersCount","users","mapStateToProps","state","usersPage"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {\n  follow,\n  setUsers,\n  unfollow,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n} from \"../../redux/users-reducer.\";\nimport Users from \"./Users\";\nimport Preloader from \"../common/preloader/Preloader\";\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    this.props.toggleIsFetching(true);\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currentPage}&count=${this.props.pageSize}`\n      )\n      .then((response) => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n      });\n  }\n\n  onPageChanged = (pageNumber) => {\n    this.props.setCurrenPage(pageNumber);\n    this.props.toggleIsFetching(true);\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`\n      )\n      .then((response) => {\n        this.props.toggleIsFetching(false);\n        this.props.setUsers(response.data.items);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFetching ? <Preloader /> : null}\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          onPageChanged={this.onPageChanged}\n          users={this.props.users}\n          follow={this.props.follow}\n          unfollow={this.props.unfollow}\n        />\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n  };\n};\n\n// let mapDispathcToProps = (dispatch) => {\n//   return {\n//     follow: (userId) => {\n//       dispatch(followAC(userId));\n//     },\n//     unfollow: (userId) => {\n//       dispatch(unfollowAC(userId));\n//     },\n//     setUsers: (users) => {\n//       dispatch(setUsersAC(users));\n//     },\n//     setCurrentPage: (pageNumber) => {\n//       dispatch(setCurrentPageAC(pageNumber));\n//     },\n//     setTotalUsersCount: (totalCount) => {\n//       dispatch(setUsersTotalCountAC(totalCount));\n//     },\n//     toggleIsFetching: (isFetching) => {\n//       dispatch(toggleIsFetchingAC(isFetching));\n//     },\n//   };\n// };\n\nexport default connect(mapStateToProps, {\n  follow,\n  unfollow,\n  setUsers,\n  setCurrentPage,\n  setTotalUsersCount,\n  toggleIsFetching,\n})(UsersContainer);\n"]},"metadata":{},"sourceType":"module"}