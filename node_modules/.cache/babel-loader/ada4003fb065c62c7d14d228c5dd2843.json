{"ast":null,"code":"const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true\n};\n\nconst usersReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case FOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: true\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case UNFOLLOW:\n      return { ...state,\n        users: state.users.map(u => {\n          if (u.id === action.userId) {\n            return { ...u,\n              followed: false\n            };\n          }\n\n          return u;\n        })\n      };\n\n    case SET_USERS:\n      return { ...state,\n        users: action.users\n      };\n\n    case SET_CURRENT_PAGE:\n      return { ...state,\n        currentPage: action.currentPage\n      };\n\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state,\n        totalUsersCount: action.count\n      };\n\n    case TOGGLE_IS_FETCHING:\n      return { ...state,\n        isFetching: action.isFetching\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport const followAC = userId => ({\n  type: FOLLOW,\n  userId\n});\nexport const unfollowAC = userId => ({\n  type: UNFOLLOW,\n  userId\n});\nexport const setUsersAC = users => ({\n  type: SET_USERS,\n  users\n});\nexport const setCurrentPageAC = currentPage => ({\n  type: SET_CURRENT_PAGE,\n  currentPage\n});\nexport const setUsersTotalCountAC = totalUsersCount => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount\n});\nexport const setIsFetchingAC = isFetching => ({\n  type: TOGGLE_IS_FETCHING,\n  count: totalUsersCount\n});\nexport default usersReducer;","map":{"version":3,"sources":["/Users/vadimpolovinko/Desktop/React learning/01-first/react-kabzda-01/src/redux/users-reducer..js"],"names":["FOLLOW","UNFOLLOW","SET_USERS","SET_CURRENT_PAGE","SET_TOTAL_USERS_COUNT","TOGGLE_IS_FETCHING","initialState","users","pageSize","totalUsersCount","currentPage","isFetching","usersReducer","state","action","type","map","u","id","userId","followed","count","followAC","unfollowAC","setUsersAC","setCurrentPageAC","setUsersTotalCountAC","setIsFetchingAC"],"mappings":"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","sourcesContent":["const FOLLOW = \"FOLLOW\";\nconst UNFOLLOW = \"UNFOLLOW\";\nconst SET_USERS = \"SET_USERS\";\nconst SET_CURRENT_PAGE = \"SET_CURRENT_PAGE\";\nconst SET_TOTAL_USERS_COUNT = \"SET_TOTAL_USERS_COUNT\";\nconst TOGGLE_IS_FETCHING = \"TOGGLE_IS_FETCHING\";\n\nlet initialState = {\n  users: [],\n  pageSize: 5,\n  totalUsersCount: 0,\n  currentPage: 1,\n  isFetching: true,\n};\n\nconst usersReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case FOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userId) {\n            return { ...u, followed: true };\n          }\n          return u;\n        }),\n      };\n    case UNFOLLOW:\n      return {\n        ...state,\n        users: state.users.map((u) => {\n          if (u.id === action.userId) {\n            return { ...u, followed: false };\n          }\n          return u;\n        }),\n      };\n    case SET_USERS:\n      return { ...state, users: action.users };\n    case SET_CURRENT_PAGE:\n      return { ...state, currentPage: action.currentPage };\n    case SET_TOTAL_USERS_COUNT:\n      return { ...state, totalUsersCount: action.count };\n    case TOGGLE_IS_FETCHING:\n      return { ...state, isFetching: action.isFetching };\n    default:\n      return state;\n  }\n};\nexport const followAC = (userId) => ({ type: FOLLOW, userId });\nexport const unfollowAC = (userId) => ({ type: UNFOLLOW, userId });\nexport const setUsersAC = (users) => ({ type: SET_USERS, users });\nexport const setCurrentPageAC = (currentPage) => ({\n  type: SET_CURRENT_PAGE,\n  currentPage,\n});\nexport const setUsersTotalCountAC = (totalUsersCount) => ({\n  type: SET_TOTAL_USERS_COUNT,\n  count: totalUsersCount,\n});\nexport const setIsFetchingAC = (isFetching) => ({\n  type: TOGGLE_IS_FETCHING,\n  count: totalUsersCount,\n});\n\nexport default usersReducer;\n"]},"metadata":{},"sourceType":"module"}