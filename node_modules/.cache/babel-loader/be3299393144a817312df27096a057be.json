{"ast":null,"code":"var _jsxFileName = \"/Users/vadimpolovinko/Desktop/React learning/01-first/react-kabzda-01/src/components/Users/UsersContainer.jsx\";\nimport React from \"react\";\nimport * as axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport { followAC, setUsersAC, unfollowAC, setCurrentPageAC, setUsersTotalCountAC } from \"../../redux/users-reducer.\";\nimport Users from \"./Users\";\nimport preloader from \"./../../assets/images/preloader.svg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nclass UsersContainer extends React.Component {\n  constructor() {\n    super(...arguments);\n\n    this.onPageChanged = pageNumber => {\n      this.props.setCurrenPage(pageNumber);\n      axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`).then(response => {\n        this.props.setUsers(response.data.items);\n      });\n    };\n  }\n\n  componentDidMount() {\n    axios.get(`https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currenPage}&count=${this.props.pageSize}`).then(response => {\n      this.props.setUsers(response.data.items);\n      this.props.setTotalUsersCount(response.data.totalCount);\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [this.props.isFetching ? /*#__PURE__*/_jsxDEV(\"img\", {\n        src: preloader,\n        alt: \"loader\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(Users, {\n        totalUsersCount: this.props.totalUsersCount,\n        pageSize: this.props.pageSize,\n        currentPage: this.props.currentPage,\n        onPageChanged: this.onPageChanged,\n        users: this.props.users,\n        follow: this.props.follow,\n        unfollow: this.props.unfollow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nlet mapStateToProps = state => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching\n  };\n};\n\nlet mapDispathcToProps = dispatch => {\n  return {\n    follow: userId => {\n      dispatch(followAC(userId));\n    },\n    unfollow: userId => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: users => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrenPage: pageNumber => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: totalCount => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    },\n    toggleIsFetching: isFetching => {\n      dispatch(toggleIsFetchingAC);\n    }\n  };\n};\n\nexport default connect(mapStateToProps, mapDispathcToProps)(UsersContainer);","map":{"version":3,"sources":["/Users/vadimpolovinko/Desktop/React learning/01-first/react-kabzda-01/src/components/Users/UsersContainer.jsx"],"names":["React","axios","connect","followAC","setUsersAC","unfollowAC","setCurrentPageAC","setUsersTotalCountAC","Users","preloader","UsersContainer","Component","onPageChanged","pageNumber","props","setCurrenPage","get","pageSize","then","response","setUsers","data","items","componentDidMount","currenPage","setTotalUsersCount","totalCount","render","isFetching","totalUsersCount","currentPage","users","follow","unfollow","mapStateToProps","state","usersPage","mapDispathcToProps","dispatch","userId","toggleIsFetching","toggleIsFetchingAC"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport * as axios from \"axios\";\nimport { connect } from \"react-redux\";\nimport {\n  followAC,\n  setUsersAC,\n  unfollowAC,\n  setCurrentPageAC,\n  setUsersTotalCountAC,\n} from \"../../redux/users-reducer.\";\nimport Users from \"./Users\";\nimport preloader from \"./../../assets/images/preloader.svg\";\n\nclass UsersContainer extends React.Component {\n  componentDidMount() {\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${this.props.currenPage}&count=${this.props.pageSize}`\n      )\n      .then((response) => {\n        this.props.setUsers(response.data.items);\n        this.props.setTotalUsersCount(response.data.totalCount);\n      });\n  }\n\n  onPageChanged = (pageNumber) => {\n    this.props.setCurrenPage(pageNumber);\n    axios\n      .get(\n        `https://social-network.samuraijs.com/api/1.0/users?page=${pageNumber}&count=${this.props.pageSize}`\n      )\n      .then((response) => {\n        this.props.setUsers(response.data.items);\n      });\n  };\n\n  render() {\n    return (\n      <>\n        {this.props.isFetching ? <img src={preloader} alt=\"loader\" /> : null}\n        <Users\n          totalUsersCount={this.props.totalUsersCount}\n          pageSize={this.props.pageSize}\n          currentPage={this.props.currentPage}\n          onPageChanged={this.onPageChanged}\n          users={this.props.users}\n          follow={this.props.follow}\n          unfollow={this.props.unfollow}\n        />\n      </>\n    );\n  }\n}\n\nlet mapStateToProps = (state) => {\n  return {\n    users: state.usersPage.users,\n    pageSize: state.usersPage.pageSize,\n    totalUsersCount: state.usersPage.totalUsersCount,\n    currentPage: state.usersPage.currentPage,\n    isFetching: state.usersPage.isFetching,\n  };\n};\n\nlet mapDispathcToProps = (dispatch) => {\n  return {\n    follow: (userId) => {\n      dispatch(followAC(userId));\n    },\n    unfollow: (userId) => {\n      dispatch(unfollowAC(userId));\n    },\n    setUsers: (users) => {\n      dispatch(setUsersAC(users));\n    },\n    setCurrenPage: (pageNumber) => {\n      dispatch(setCurrentPageAC(pageNumber));\n    },\n    setTotalUsersCount: (totalCount) => {\n      dispatch(setUsersTotalCountAC(totalCount));\n    },\n    toggleIsFetching: (isFetching) => {\n      dispatch(toggleIsFetchingAC);\n    },\n  };\n};\n\nexport default connect(mapStateToProps, mapDispathcToProps)(UsersContainer);\n"]},"metadata":{},"sourceType":"module"}