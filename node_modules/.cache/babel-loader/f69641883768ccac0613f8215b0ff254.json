{"ast":null,"code":"const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\nlet initialState = {\n  posts: [{\n    id: 1,\n    message: \"Hi, how are you\",\n    likesCount: 12\n  }, {\n    id: 2,\n    message: \"It's my first post\",\n    likesCount: 11\n  }],\n  newPostText: \"it-kamasutra\"\n};\n\nconst profileReducer = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST:\n      let newPost = {\n        id: 5,\n        message: state.newPostText,\n        likesCount: 0\n      };\n      let stateCopy = { ...state\n      };\n      stateCopy.posts = [...state.posts];\n      stateCopy.posts.unshift(newPost);\n      stateCopy.newPostText = \"\";\n      return state;\n\n    case UPDATE_NEW_POST_TEXT:\n      state.newPostText = action.newText;\n      return state;\n\n    default:\n      return state;\n  }\n};\n\nexport const addPostActionCreator = () => ({\n  type: ADD_POST\n});\nexport const updateNewPostTextActionCreator = text => ({\n  type: UPDATE_NEW_POST_TEXT,\n  newText: text\n});\nexport default profileReducer;","map":{"version":3,"sources":["/Users/vadimpolovinko/Desktop/React learning/01-first/react-kabzda-01/src/redux/profile-reducer.js"],"names":["ADD_POST","UPDATE_NEW_POST_TEXT","initialState","posts","id","message","likesCount","newPostText","profileReducer","state","action","type","newPost","stateCopy","unshift","newText","addPostActionCreator","updateNewPostTextActionCreator","text"],"mappings":"AAAA,MAAMA,QAAQ,GAAG,UAAjB;AACA,MAAMC,oBAAoB,GAAG,sBAA7B;AAEA,IAAIC,YAAY,GAAG;AACfC,EAAAA,KAAK,EAAE,CACH;AAAEC,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,iBAAlB;AAAqCC,IAAAA,UAAU,EAAE;AAAjD,GADG,EAEH;AAAEF,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,oBAAlB;AAAwCC,IAAAA,UAAU,EAAE;AAApD,GAFG,CADQ;AAKfC,EAAAA,WAAW,EAAE;AALE,CAAnB;;AAQA,MAAMC,cAAc,GAAG,YAAkC;AAAA,MAAjCC,KAAiC,uEAAzBP,YAAyB;AAAA,MAAXQ,MAAW;;AACrD,UAAQA,MAAM,CAACC,IAAf;AACI,SAAKX,QAAL;AACI,UAAIY,OAAO,GAAG;AACVR,QAAAA,EAAE,EAAE,CADM;AAEVC,QAAAA,OAAO,EAAEI,KAAK,CAACF,WAFL;AAGVD,QAAAA,UAAU,EAAE;AAHF,OAAd;AAMA,UAAIO,SAAS,GAAG,EAAC,GAAGJ;AAAJ,OAAhB;AACAI,MAAAA,SAAS,CAACV,KAAV,GAAkB,CAAC,GAAGM,KAAK,CAACN,KAAV,CAAlB;AACAU,MAAAA,SAAS,CAACV,KAAV,CAAgBW,OAAhB,CAAwBF,OAAxB;AACAC,MAAAA,SAAS,CAACN,WAAV,GAAwB,EAAxB;AACA,aAAOE,KAAP;;AACJ,SAAKR,oBAAL;AACIQ,MAAAA,KAAK,CAACF,WAAN,GAAoBG,MAAM,CAACK,OAA3B;AACA,aAAON,KAAP;;AACJ;AAAS,aAAOA,KAAP;AAhBb;AAkBH,CAnBD;;AAoBA,OAAO,MAAMO,oBAAoB,GAAG,OAAO;AAAEL,EAAAA,IAAI,EAAEX;AAAR,CAAP,CAA7B;AACP,OAAO,MAAMiB,8BAA8B,GAAIC,IAAD,KAAW;AACrDP,EAAAA,IAAI,EAAEV,oBAD+C;AAErDc,EAAAA,OAAO,EAAEG;AAF4C,CAAX,CAAvC;AAKP,eAAeV,cAAf","sourcesContent":["const ADD_POST = \"ADD-POST\";\nconst UPDATE_NEW_POST_TEXT = \"UPDATE-NEW-POST-TEXT\";\n\nlet initialState = {\n    posts: [\n        { id: 1, message: \"Hi, how are you\", likesCount: 12 },\n        { id: 2, message: \"It's my first post\", likesCount: 11 },\n    ],\n    newPostText: \"it-kamasutra\",\n};\n\nconst profileReducer = (state = initialState, action) => {\n    switch (action.type) {\n        case ADD_POST:\n            let newPost = {\n                id: 5,\n                message: state.newPostText,\n                likesCount: 0,\n            };\n\n            let stateCopy = {...state};\n            stateCopy.posts = [...state.posts]\n            stateCopy.posts.unshift(newPost);\n            stateCopy.newPostText = \"\";\n            return state;\n        case UPDATE_NEW_POST_TEXT:\n            state.newPostText = action.newText;\n            return state;\n        default: return state;\n    }\n}\nexport const addPostActionCreator = () => ({ type: ADD_POST });\nexport const updateNewPostTextActionCreator = (text) => ({\n    type: UPDATE_NEW_POST_TEXT,\n    newText: text,\n});\n\nexport default profileReducer;"]},"metadata":{},"sourceType":"module"}